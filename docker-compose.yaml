services:
  products:
    build:
      context: products
      dockerfile: src/main/docker/Dockerfile.jvm
    networks:
      - traefik
      - products
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.products.rule=Host("${HOSTNAME}") && PathPrefix("/api/product-service")
      - traefik.http.services.products.loadbalancer.server.port=8080
      - traefik.http.middlewares.products-stripprefix.stripprefix.prefixes=/api/product-service
      - traefik.http.routers.products.middlewares=products-stripprefix

  online-shop:
    build:
      context: online-shop
      dockerfile: Dockerfile
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.online-shop.rule=Host("${HOSTNAME}") && PathPrefix("/")
      - traefik.http.services.online-shop.loadbalancer.server.port=3000

  productdb:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: products
      PGDATA: /data/postgres
    volumes:
      - productdb:/data/postgres
    networks:
      - products
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      SCRIPT_NAME: /management/pgadmin
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - traefik
      - products
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.pgadmin.rule=Host("${HOSTNAME}") && PathPrefix("/management/pgadmin")

  swagger-ui:
    image: swaggerapi/swagger-ui
    environment:
      URLS: '[{ url: "/api/product-service/q/openapi", name: "Products" },]'
      BASE_URL: /api/swagger-ui
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.swagger-ui.rule=Host("${HOSTNAME}") && PathPrefix("/api/swagger-ui")
      - traefik.http.services.swagger-ui.loadbalancer.server.port=8080

  rabbitmq:
    image: rabbitmq:management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.rabbitmq.rule=Host("${HOSTNAME}") && PathPrefix("/management/rabbitmq/")
      - traefik.http.services.rabbitmq.loadbalancer.server.port=15672
      - traefik.http.middlewares.rabbitmq-stripprefix.stripprefix.prefixes=/management/rabbitmq/
      - traefik.http.routers.rabbitmq.middlewares=rabbitmq-stripprefix
    networks:
      - traefik

  cache:
    image: redis
    command: redis-server

networks:
  products:
    driver: bridge
  traefik:
    external: true
    name: traefik

volumes:
  productdb:
  pgadmin:
