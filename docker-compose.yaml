services:
  products:
    build: 
      context: products
      dockerfile: src/main/docker/Dockerfile.jvm
    networks:
      - backend
    labels:
      - traefik.http.routers.quarkus.rule=PathPrefix("/api/products")
      - traefik.http.services.quarkus.loadbalancer.server.port=8080
      
  online-shop:
    build:
      context: online-shop
      dockerfile: Dockerfile
    networks:
      - backend
    labels:
      - traefik.http.routers.online-shop.rule=PathPrefix("/")
      - traefik.http.services.online-shop.loadbalancer.server.port=3000

  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - backend
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@postgres.de
      PGADMIN_DEFAULT_PASSWORD: postgres
      SCRIPT_NAME: /pgadmin4
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - backend
    restart: unless-stopped
    labels:
      - traefik.http.routers.pgadmin.rule=PathPrefix("/pgadmin4")
    tty: true


  swagger-ui:
    image: swaggerapi/swagger-ui
    environment:
      URLS: "[{ url: \"http://localhost/api/products/q/openapi\", name: \"Products\" },]"
      BASE_URL: /api/swagger-ui
    networks:
      - backend
    labels:
      - traefik.http.routers.swagger-ui.rule=PathPrefix("/api/swagger-ui")
      - traefik.http.services.swagger-ui.loadbalancer.server.port=8080

  reverse-proxy:
    image: traefik:v2.9
    command:
      - --api.insecure=true
      # - --log.level=DEBUG
      - --providers.docker=true
      - --log.format=json
    ports:
      - 80:80
      - 8080:8080
    networks:
      - backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

volumes:
  postgres:
  pgadmin:
